apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: ${kubernetes_image}:${kubernetes_version}
    command:
    - /hyperkube
    - apiserver
    - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,ServiceAccount,SecurityContextDeny,ResourceQuota
    - --alsologtostderr=true
    - --authorization-mode=ABAC
    - --authorization-policy-file=/etc/secrets/auth-policy.json
    - --bind-address=0.0.0.0
    - --cloud-config=/etc/cloud.cfg
    - --cloud-provider=aws
    - --enable-swagger-ui=true
    - --etcd-servers=https://127.0.0.1:2379
    - --runtime-config=extensions/v1beta1=true
    - --secure-port=443
    - --service-account-key-file=/etc/secrets/kubeapi-key.pem
    - --service-cluster-ip-range=${kubernetes_service_range}
    - --tls-cert-file=/etc/secret/kubeapi.pem
    - --tls-private-key-file=/etc/secrets/kubeapi-key.pem
    - --token-auth-file=/etc/secrets/token.csv
    - --v=5
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - name: secrets
      mountPath: /etc/secrets
      readOnly: true
    - name: certs
      mountPath: /etc/ssl/certs
      readOnly: true
    - name: cloud-config
      mountPath: /etc/cloud.cfg
      readOnly: true
  volumes:
  - name: secrets
    hostPath:
      path: /run/kubelet
  - name: certs
    hostPath:
      path: /etc/ssl/certs
  - name: cloud-config
    hostPath:
      path: /etc/cloud.cfg
