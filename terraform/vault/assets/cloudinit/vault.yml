#cloud-config

coreos:
  etcd2:
    listen-client-urls: https://0.0.0.0:2379
    listen-peer-urls: https://0.0.0.0:2380
    initial-cluster-token: vault
    cert-file: /run/etcd2/etcd.pem
    key-file: /run/etcd2/etcd-key.pem
    peer-cert-file: /run/etcd2/etcd.pem
    peer-key-file: /run/etcd2/etcd-key.pem
  fleet:
    metadata: env=${environment},public_ip=$public_ipv4,private_ipv4=$private_ipv4,region=${aws_region},role=vault
    etcd_servers: https://127.0.0.1:2379
  locksmith:
    endpoint: https://127.0.0.1:2379
  update:
    reboot-strategy: 'off'
  units:
  - name: systemd-sysctl.service
    command: restart
  - name: etcd-discovery.service
    command: start
    content: |
      [Unit]
      Description=Etcd Discovery Service
      Requires=update-ca-certificates.service
      After=update-ca-certificates.service
      Before=etcd2.service

      [Service]
      RemainAfterExit=yes
      Restart=always
      RestartSec=10
      Environment="URL=${etcd_discovery_url}"
      Environment="FILEN=/opt/bin/etcd-discovery"
      Environment="FILEN_GZ=/opt/bin/etcd-discovery.gz"
      Environment="MD5=${etcd_discovery_md5}"
      ExecStartPre=/usr/bin/mkdir -p /opt/bin /etc/sysconfig
      ExecStartPre=/usr/bin/bash -c 'until [[ -x $${FILEN} ]] && [[ $(md5sum $${FILEN} | cut -f1 -d" ") == $${MD5} ]]; \
        do wget -q -O $${FILEN_GZ} $${URL} && gunzip $${FILEN_GZ} && chmod +x $${FILEN}; done'
      ExecStart=/opt/bin/etcd-discovery -environment-file=/etc/sysconfig/etcd-discovery -logtostderr -v=10
  - name: etcd2-datadir.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Create the Etcd data folder
      Before=etcd2.service
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/bin/install -d -o etcd -g etcd -m 0750 /data
  - name: etcd2.service
    command: start
    enable: true
    drop-ins:
    - name: 10-dependencies.conf
      content: |
        [Unit]
        Requires=update-ca-certificates.service
        After=update-ca-certificates.service
    - name: 12-advertized.conf
      content: |
        [Service]
        Environment="ETCD_ADVERTISE_CLIENT_URLS=https://%H:2379"
        Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=https://%H:2380"
    - name: 15-s3secrets.conf
      content: |
        [Service]
        RuntimeDirectory=etcd2
        RuntimeDirectoryMode=0700
        EnvironmentFile=/etc/s3secrets
        ExecStartPre=/opt/bin/s3secrets s3 get -d=%t/etcd2 common/etcd.pem common/etcd-key.pem
    - name: 30-etcd_peers.conf
      content: |
        [Service]
        EnvironmentFile=/etc/sysconfig/etcd-discovery
  - name: fleet.service
    command: stop
  - name: install-s3secrets.service
    command: start
    content: |
      [Unit]
      Description=Install s3secrets
      Documentation=https://github.com/UKHomeOffice/s3secrets
      Before=etcd2.service

      [Service]
      Type=notify
      NotifyAccess=all
      RemainAfterExit=yes
      TimeoutStartSec=180
      Environment="URL=${s3secrets_release_url}"
      Environment="FILEN=/opt/bin/s3secrets"
      Environment="MD5SUM=${s3secrets_release_md5}"
      ExecStartPre=/usr/bin/mkdir -p /opt/bin
      ExecStartPre=/usr/bin/bash -c 'until [[ -x $${FILEN} ]] && [[ $(md5sum $${FILEN} | cut -f1 -d" ") == $${MD5SUM} ]]; do wget -q -O $${FILEN} $${URL} && chmod +x $${FILEN}; done'
      ExecStart=/usr/bin/systemd-notify --ready --status="succussfully downloaded the s3secrets"
  - name: update-ca-certificates.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Update CA Certificates
      Requires=install-s3secrets.service
      After=install-s3secrets.service
      Before=etcd2.service

      [Service]
      Type=notify
      NotifyAccess=all
      EnvironmentFile=/etc/environment
      EnvironmentFile=/etc/s3secrets
      RemainAfterExit=yes
      TimeoutStartSec=300
      ExecStartPre=/usr/bin/mkdir -p /etc/ssl/etcd
      ExecStartPre=/opt/bin/s3secrets s3 get -d=/etc/ssl/certs common/ca.pem
      ExecStartPre=/usr/bin/cp -f /etc/ssl/certs/ca.pem /etc/ssl/etcd/ca.pem
      ExecStartPre=/usr/sbin/update-ca-certificates
      ExecStart=/usr/bin/systemd-notify --ready --status="succussfully updated the ca root certificates"
  - name: install-vault.service
    command: start
    content: |
      [Unit]
      Description=Install Vault

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=180
      Environment="URL=${vault_release_url}"
      Environment="FILEN=/opt/bin/vault"
      Environment="MD5SUM=${vault_release_md5}"
      ExecStartPre=/usr/bin/mkdir -p /opt/bin
      ExecStart=/usr/bin/bash -c 'until [[ -x $${FILEN} ]] && [[ $(md5sum $${FILEN} | cut -f1 -d" ") == $${MD5SUM} ]]; do wget -q -O $${FILEN} $${URL} && chmod +x $${FILEN}; done'
  # @@TODO - switching the auto-update for now, doesnt work well in a ASG
  - name: update-engine.service
    command: stop
    enable: false
write_files:
- path: /etc/sysctl.d/10-disable-ipv6.conf
  permissions: 0644
  owner: root
  content: |
    net.ipv6.conf.all.disable_ipv6 = 1
- path: /etc/s3secrets
  content: |
    AWS_BUCKET=${secrets_bucket_name}
    AWS_DEFAULT_REGION=${aws_region}
- path: /etc/aws-environment
  content: |
    AWS_REGION=${aws_region}
    DNS_ZONE_NAME=${dns_zone_name}
    ENVIRONMENT=${environment}
- path: /etc/vault.hcl
  permissions: 0440
  content: |
    backend "etcd" {
      address = "https://127.0.0.1:2379"
      advertise_addr = "https://$private_ipv4:8200"
    }

    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_cert_file = "/run/vault/vault-crt.pem"
      tls_key_file = "/run/vault/vault-key.pem"
    }

    # TODO(vaijab): give CAP_IPC_LOCK via systemd service instead
    disable_mlock = true
